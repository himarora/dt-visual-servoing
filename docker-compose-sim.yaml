version: '3'
services:
  ros_core:
      image: ros:noetic-ros-core
      command: roscore
      environment:
        ROS_MASTER_URI: "http://ros_core:11311"
      networks: &networks
      - duckietown-docker-net
      env_file: &env_file
      - setup/parameters.env
        #expose:
        #- "11311"
      ports:
      - "11311:11311"

  simulator:
      image: ${AIDO_REGISTRY}/duckietown/challenge-aido_lf-simulator-gym:daffy
      env_file: *env_file
      # logging:
      #   driver: "none"
      environment:
        AIDONODE_DATA_IN: /fifos/simulator-in
        AIDONODE_DATA_OUT: fifo:/fifos/simulator-out
        # language=yaml
        AIDONODE_CONFIG: |
          env_constructor: Simulator
          env_parameters:
            max_steps: 500001 # we don't want the gym to reset itself
            camera_width: 640
            camera_height: 480
            distortion: true
            #camera_width: 320
            #camera_height: 240
          debug_profile: false # set profiling information
          debug_profile_summary: true # show speedup
          camera_dt: 0.06 # 15 fps simulated camera
          render_dt: 0.06 # we are not going to do any superres
          minimum_physics_dt: 0.06
          blur_time: 0.05 # this does not affect performance in any way
      volumes: &fifos
        - fifos:/fifos
      networks: *networks
      depends_on:
        - middleware_manager

#  template_random:
#      image: ${AIDO_REGISTRY}/duckietown/challenge-aido_lf-template-random:daffy
#      environment:
#        AIDONODE_DATA_IN: /fifos/agent-in
#        AIDONODE_DATA_OUT: fifo:/fifos/agent-out
#      volumes: *fifos
#      networks: *networks
#      depends_on:
#        - ros_core
#        - middleware_manager

  ros_template:
      image: ${AIDO_REGISTRY}/duckietown/challenge-aido_lf-template-ros:daffy-amd64
      command: |
        bash -c "\
        catkin build --workspace /code/overlay_ws &&\
        source /code/overlay_ws/devel/setup.bash &&\
        roslaunch --wait duckietown_demos lane_following.launch & python3 solution.py"
      environment:
        AIDONODE_DATA_IN: /fifos/agent-in
        AIDONODE_DATA_OUT: fifo:/fifos/agent-out
        ROS_MASTER_URI: "http://ros_core:11311"
        ROS_HOSTNAME: ""
        HOSTNAME: "default"
        VEHICLE_NAME: "default"
      volumes:
        - fifos:/fifos
        - ./setup/assets:/data/config
        - ./overlay_ws:/code/overlay_ws
      networks: *networks
      depends_on:
        - ros_core
        - middleware_manager

  novnc:
      image: duckietown/dt-gui-tools:daffy-amd64
      command: dt-launcher-vnc
      networks: *networks
      env_file: *env_file
      environment:
        ROS_MASTER_URI: "http://ros_core:11311"
        HOSTNAME: default
        VEHICLE_NAME: default
      ports:
      - "8087:8087"
      depends_on:
      - ros_core

  middleware_manager:
      image: ${AIDO_REGISTRY}/duckietown/mooc-fifos-connector:daffy
      environment:
        middleware_parameters: |
          episodes_per_scenario: 1
          episode_length_s: 100.0
          min_episode_length_s: 1.0
          seed: 42
          physics_dt: 0.06
          max_failures: 2
          agent_in: /fifos/agent-in
          agent_out: /fifos/agent-out
          sim_in: /fifos/simulator-in
          sim_out: /fifos/simulator-out
          sm_in: None
          sm_out: None
          timeout_initialization: 15
          timeout_regular: 360
      volumes: *fifos
      networks: *networks
      env_file: *env_file

  car_interface:
      image: duckietown/dt-car-interface:daffy-amd64
      environment:
        ROS_MASTER_URI: "http://ros_core:11311"
        VEHICLE_NAME: default
      networks: *networks

  # dt-core:
  #     image: duckietown/dt-core:daffy-amd64
  #     command: |
  #       bash -c "dt-launcher-lf"
  #     environment:
  #       ROS_MASTER_URI: "http://ros_core:11311"
  #       VEHICLE_NAME: default
  #     volumes:
  #       - ./setup/assets:/data/config
  #     networks: *networks

volumes:
  fifos:

networks:
    duckietown-docker-net:
